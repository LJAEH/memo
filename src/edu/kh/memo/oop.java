package edu.kh.memo;

public class oop {

	
	/*
	   
	   배열 복사 깊은 복사, 얕은 복사 차이
	   
	   얕은 복사 : 복사한 배열의 주소값만 가져옴 
	   깊은 복사 : 복사한 배열을 그대로 가져옴
	   
	   반복문 종류 
	   
	   for문
	   for(초기문; 조건문; 증가문){
	   		수행할 코드;
	   }
	   while(조건문){
	   		수행할 코드;
	   		[증감문 및 분기문]
	   }
	   do{
	   		수행할 코드;
	   		[증감문 및 분기문]
	   } while (조건문);
	   
	   변수종류 클래스변수 등등
	   
	   클래스변수 클래스 내에서 static 키워드로 선언된 변수
	   		   JVM에 선언된 이후 프로그램이 종료될때까지 선언이 유효함
	   		   클래스가 여러번 생성되어도 static 변수는 처음 한번만 생성
	   		   객체간에 공유됨
	   인스턴스변수 클래스 내에서 선언된 변수
	   			객체를 새로 생성할때마다 새 변수를 가짐
	   			공유되지않음
	   지역변수 메서드내에서 선언된 변수 메서드가 종료되면 기능하지않음
	   
	   
	   객체 문제
	   
	   사물이나 개념과 같이 독립되고 구분되는 객체로 이루어져있으며
	   일어나는 사건들은 객체간의 상호작용이다
	   이러한 개념들을 컴퓨터로 가져와서 만든것이 객체지향언어
	   
	   접근 제한자  
	   
	   public 모든 접근 허용
	   protected 패키지내 상속관계인 접근 허용
	   (default) 패키지내 접근 허용 
	   private 현재 객체내 접근만 허용
	   
	   필드의 초기화 순서 
	   
	   클래스변수
	   JVM기본값 명시적초기값 클래스 초기화 블록 초기값
	   인스턴스변수
	   JVM기본값 명시적초기값 인스턴스 초기화 블록 초기값 생성자를 통한 초기값
	   
	   생성자규칙 클래스명과 동일한 이름으로 선언 
	   
	   
	   
	   
	   
	   
	   
	   클래스변수 == JVM기본값 => 명시적 초기값 => 클래스 초기하 블록 초기값
	   인스턴스 변수 => JVM기본값 => 명시적 초기값 
	             => 인스턴스 초기화 블록 초기값 => 생성자를 통한 초기값 
	  
	  
	  객체란 무엇인가....
	  
	  1. 객체(Object: 객체, 물건) 독립적을 각각 구분해서 인식할 수 있는 모든 것
	  ex) 키보드,김치,나,미세먼지,모래한알,판소리,무형문화제(실체가 없어도 객체임)
	 
	  2. 지향(Oriented): 어떠한 것을 목표로 함
	  객체 지향: 독립적으로 각각 구분해서 인식할 수 있도록하는 것을 목표로 한다.
	  
	  3. 언어(컴퓨터에서의 언어:Language:코드)
	  코딩방식
	  
	  ==> 객체 지향 언어: 독립적으로 각각 수분해서 인식할 수 있는 것을 목표로 하는 코딩 방식
	  
	  객체 지향의 3+1 대 특징
	  
	  1. 캡슐화 
	   보호역할: 외부로부터의 접근을 막는다(정보 은닉)
	  2. 상속
	   부모님이 자식에게 물려줌**(속성, 기능)*+ 자식이 이미 가지고 있는 것
	   ++ 추상화
	   구체적이지않음
	  3. 다형성 
	   다양한 형태를 지니는 성질
	   객체 지향 언어
	   	속성값 => 기능(동작,행복)
	   	
	   ***객체 지향 언어란??*** 중요
	   현실 세계는 사물이나 개념처럼 독립되고 구분되고 각각의 객체로
	   발생하는 모든 사건들은 객체간의 상호작용이다.
	   이 개념을 컴퓨터로 옮겨 놓아 만들어낸 것이 객체지향 엉어이다
	   
	   자바에서 객체란?
	   클래스에 정의된 내용대로 new 연산자를 통해 memory영역에 기록된 것들
	  
	   ***클래스(class)*** => 사용자 정의 자료형
	   *갹체의 특성(속성. 기능)에 대한 정의를 한 것*
	  
	   **클래스 작성 시 반드시 필요한 것**
	   추상화, 캡슐화
	   
	   추상화
	   **필요한 공통점을 추출하고 불필요한 부분을 제거** 하는 과정
	   
	   예시
	   알수있는것(공통적): 사람,여자,부티남,실내,슬퍼보임
	   알수없는것(구체적): 나이,이름,사는곳,키...
	   
	   5천만명 데이터를 저장하기 위해서
	   5천만개의 변수를 저장할 수는 없다.
	   
	   => 국민이라면 가지고 있는 공통적인 속성을 만들어 놓고
	   => 그곳에 개개인의 정보를 넣어서 사용함
	   
	   +면 public -면 private 으로 만들어야됨
	   
	   코딩에서 
	   
	   규 약 : 어떻게 하자~ 안지키는 경우도 있음
	   규 칙 : 안지키면 패널티
	   원 칙 : 위배하는 순간 큰 문제를 야기 -> 불허
	   
	   
	   객체(Instance) : 컴퓨터 안에서 말하는 객체
	   
	   
	   ****객체 에는 속성과 기능이 있는데
	   
	   
	   03. 필드(Field)
	       : 클래스에서 변수에 관련된 것(속성)을 작성하는 곳 => 필드****
	  
	   *멤버 변수 (== 필드에 쓰여지는 변수)
	   *객체의 속성

	   1) 인스턴스 변수
	   	  - 필드에 작성된 일반 변수
	   	  - new 연산자에 의해서 객체(인스턴스)가 생성될 때
	        메모리가 할당된다고 하여 인스턴스 변수라고 함
	      - heap영역에 메모리가 할당
	      - 객체가 생성될 때 마다 생성
	      - 객체가 참조하는 변수가 없을 경우 사라짐
	      
	   2) 클래스 변수 (== static 변수)
	      - 필드에 스태틱 예약어와 함께 작성된 변수
	      - static 영역에 메모리가 할당되어 프로그램 종료시 까지 유지됨
	      - 프로그램 실행시 1회만 생성되는 변수
	      
	      => static으로 선언된 멤버변수로, 프로그램 실행 시 정적메모리 영역에
	         자동 할당되며 
	         프로그램 종료시 자동 소멸
	   
	   3) 지역변수 (멤버 변수아님)
	   
	      - 메소드 또는 제어문 안에서 선언된 변수
	      - stack 메모리 영역에 할당되었다가 메소드 종료 시 소멸됨  
	      - 메소드 종료 시 소멸됨
	      
	      필드 접근 제한자 ****** 무조건 외우기
	      
	      ppt 27page
	      
	  필드 예약어 static 
	  
	  => 공전 : 태양 주위를 돌듯이 static을 보고 값을 얻어옴( 가지고 있는게 아님)
	 	  
	  
	  ppt 31p
	  필드의 초기화 순서 **** 중요
	  
	  04. 생성자 ( Constructor ) 
	  
	 	객체 지향언어?
	 	컴퓨터안에 객체를 만들때 필요했던것
	 	객체가 어떻게 생겼는지 정의하는 클래스
	 	
	 	ex) new Student();
	 	
	 	클래스를 만드는 기능을 가진 특별한 메소드
	 	==> 새롭게 클래스를 만드는 기능 수행
	 	
	 	생성자명은 클래스명과 똑같이 지정해주어야 함***
	 	
	 	매개변수 생성자 작성 시 컴파일러가 기본 생성자를 자동으로 생성해주지 않음***
	 	=>직접만들어야됨
	 	
	 	
	 	******* 오버로딩 (Overloading) 작성 규칙 ********
	 	
	 	1) 메소드 이름이 동일해야한다.
	 	
	 	2) 매개변수의 자료형, 개수, 순서가 달라야한다.
	 	
	 	3) 리턴타임은 같아도 되고, 달라도 된다.
	 	
	 
	 05. 메소드 ( Method )
	 	
	 	메소드는 전달값이 있는데 결과가 없을수도 있으며
	 	전달값이 없는데 결과가 있을 수도 있으며
	 	전달값, 결과값 전부 없을 수도 있다.
	 	
	 
	 */
}
